name: Export XML and Release on Tag Push

on:
  push:
    tags:
      - '*'

jobs:
  build:
    runs-on: ubuntu-latest

    env:
      # ** FOR GENERAL USE, LIKELY NEED TO CHANGE: **
      package: TestCoverage
      container_image: intersystemsdc/iris-community:latest
      
      # ** FOR GENERAL USE, MAY NEED TO CHANGE: **
      build_flags: -dev -verbose # Load in -dev mode to get unit test code preloaded
      test_package: UnitTest
      
      # ** FOR GENERAL USE, SHOULD NOT NEED TO CHANGE: **
      instance: iris
      # Note: test_reports value is duplicated in test_flags environment variable
      test_reports: test-reports
      test_flags: >-
       -verbose -DUnitTest.ManagerClass=TestCoverage.Manager -DUnitTest.JUnitOutput=/test-reports/junit.xml
       -DUnitTest.FailuresAreFatal=1 -DUnitTest.Manager=TestCoverage.Manager
       -DUnitTest.UserParam.CoverageReportClass=TestCoverage.Report.Cobertura.ReportGenerator
       -DUnitTest.UserParam.CoverageReportFile=/source/coverage.xml

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Run Container
        run: |
          # Create test_reports directory to share test results before running container
          mkdir $test_reports
          chmod 777 $test_reports
          # Run InterSystems IRIS instance
          docker pull $container_image
          docker run -d -h $instance --name $instance -v $GITHUB_WORKSPACE:/source -v $GITHUB_WORKSPACE/$test_reports:/$test_reports --init $container_image
          echo halt > wait
          # Wait for instance to be ready
          until docker exec --interactive $instance iris session $instance < wait; do sleep 1; done

      - name: Install TestCoverage
        run: |
          echo "zpm \"install testcoverage\":1:1" > install-testcoverage
          docker exec --interactive $instance iris session $instance -B < install-testcoverage
          # Workaround for permissions issues in TestCoverage (creating directory for source export)
          chmod 777 $GITHUB_WORKSPACE

      - name: Build, Test, and Export XML
        run: |
          # Run build
          echo "zpm \"load /source $build_flags\":1:1" > build
          # Test package is compiled first as a workaround for some dependency issues.
          echo "do \$System.OBJ.CompilePackage(\"$test_package\",\"ckd\") " > test
          # Run tests
          echo "zpm \"$package test -only $test_flags\":1:1" >> test
          # Pick the targets to export as XML
          echo 'set list("TestCoverage.*.cls") = ""' >> export
          echo 'set list("TestCoverage.inc") = ""' >> export
          echo 'do $System.OBJ.Export(.list,"TestCoverage-${{ github.ref }}.xml","/exportversion=2017.2")' >> export
          docker exec --interactive $instance iris session $instance -B < build && docker exec --interactive $instance iris session $instance -B < test && docker exec --interactive $instance iris session $instance -B < export

      - name: Create Release
        id: create_release
        uses: softprops/action-gh-release@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          files: TestCoverage-${{ github.ref }}.xml
          tag_name: ${{ github.ref }}
          name: Release ${{ github.ref }}
          body: |
            Automated release created by [action-gh-release](https://github.com/softprops/action-gh-release).
          draft: false
          prerelease: false